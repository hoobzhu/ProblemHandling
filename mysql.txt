--  https://www.cnblogs.com/ivictor/p/5146247.html
rm -rf /var/run/mysqd/mysqld.pid 
mkdir -p /var/run/mysqld/
chown mysql.mysql /var/run/mysqld/

-- 设置免密登入
skip-grant-tables
-- 修改密码
update mysql.user set authentication_string=password('Mysql!23+') where user='root';
flush privileges;

--  修改mysql 安全级别
 set global validate_password_policy=0;
 set global validate_password_length=1;

-- 创建用户  赋予所有权限
 GRANT ALL PRIVILEGES ON *.* TO 'appusers'@'%' IDENTIFIED BY 'Mysql!23+';

查看mysql正在执行的线程

show processlist;
-- 查看最近一次死锁

show engine innodb status;

查看表的描述
desc  tablename   ;

统计mysql数据库表数量：
SELECT COUNT(1) FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'cms_zy';


统计数据库表的总记录数：
use information_schema;
select table_name,table_rows from tables 
where TABLE_SCHEMA = 'cms_tj' 
order by table_rows desc;


查询数据库是否含有某张表

SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='cms_300_tw'
 AND TABLE_NAME='content_ids' ;

查询数据库所有表是否含有指定列
1 不指定库名
select * from INFORMATION_SCHEMA.columns where COLUMN_NAME Like '%categories%';   

2 指定库名
SELECT DISTINCT TABLE_NAME 
    FROM INFORMATION_SCHEMA.COLUMNS
    WHERE COLUMN_NAME IN ('categories')
    AND TABLE_SCHEMA='cms_300_tw';




-- 把一张表数据复制到另一张表中
1.自动新建表并填充数据
Create table new_table_name (Select * from old_table_name);


2 表已存在，只复制数据
insert into cms_test.serviceprovider (select * from serviceprovider);



查询表中是否有重复记录：
1类
select DISTINCT a.* from cast a,cast b where a.contentId=b.contentId GROUP BY a.contentId  HAVING count(a.contentId)>1;
2类
select * from cast where contentId in(select contentId from cast GROUP BY contentId HAVING count(contentId)>1);

查找表中多余的重复记录（多个字段），不包含rowid最小的记录
select * from vitae a where (a.peopleId,a.seq) in (select peopleId,seq from vitae group by peopleId,seq having count(*) > 1) and rowid not in (select min(rowid) from vitae group by peopleId,seq having count(*)>1)  




-- MySQL server has gone away 错误:
         修改一些系统参数
show global VARIABLES like '%timeout';
show global VARIABLES like '%max_allowed_packet';
set global wait_timeout=288000;
set global interactive_timeout=288000;
set GLOBAL max_allowed_packet=1024*1024*1024;


-- 查看数据库的位置文件存储位置
show variables like '%dir%';

--- mysql 查询处来的结果集前面自动加序号问题

 select (@x1:=ifnull(@x1,0)+1) as rownum,m.* from minimetadata m;

--查看mysql服务器版本号
select version();

-- 安装第二个mysql服务

mysqld --install  mysql3 --defaults-file='D:\mysql\mysql5.6.22\mysql-5.6.22-winx64\my-default.ini'


-- 分组拼接字段字段 和不分组拼接结果集

-- 更新minimatadata表中categories字段值,关联查询方式
组内拼接
 update minimetadata pl 
 LEFT JOIN(
 select m.contentId ,CONCAT(",",group_concat(DISTINCT c.identityno)) as categories
 from minimetadata m
 LEFT JOIN minimetadata_category mc on m.contentId=mc.contentId
 LEFT JOIN category c on c.contentId=mc.category_contentId
 GROUP BY m.contentId
 )pt on pl.contentId=pt.contentId
 set pl.categories=pt.categories;

非组内拼接
UPDATE filter set categories = (select GROUP_CONCAT(DISTINCT identityno) as identityno from category where id in (1,2,3,4,5));


-- 先分组在排序  取第一条
select u.id, u.code ,u.newVersion,u.temptype ,u.lastModifyTime from uitemplate u 
where u.id=(select id from uitemplate where code=u.`code` ORDER BY lastModifyTime DESC  LIMIT 1)  and  u.temptype=2
GROUP BY code ;

-- 查询结果导出到文件
select title,substring_index(m.playUrl, '/', 3),c.`name` from mediacontent m LEFT JOIN contentprovider c on m.cp_id=c.id 
   into outfile 'D://C2/test.xls'  character set gbk; 




-- show master logs;
-- show global variables like "%datadir%";


-- 慢查询设置
set global slow_query_log='ON';
set global slow_query_log_file='/usr/local/mysql/data/slow.log';
set global long_query_time=1;

-- 开启关闭主从同步，
start slave;
stop slave;

-- mysql  从指定位置开始往下，跳过错误的位置(master_log_file 同步主库到那个文件了，master_log_pos 执行该文件导那个位置了)

stop slave
reset slave all;
change master to master_host='172.16.0.40',master_port=3306,master_user='appuser',master_password='Mysql123+',master_log_file='mysql-bin.000013',master_log_pos=68950530;
start slave;




--  开启数据查询日志
SET GLOBAL general_log = 'on';-- OFF

-- 查看主从同步的的一些信息
show slave status;



查看当前的 mysql 日志信息

-- 日志位置
show global VARIABLES like '%log%';

-- 慢查询设置
set global slow_query_log='ON';
set global slow_query_log_file='/usr/local/mysql/data/slow.log';
set global long_query_time=1;


--  开启数据查询日志（不知道mysql干啥时可以零时开启看下）
SET GLOBAL general_log = 'on';-- OFF



分析binglog 日志

--  把整个binlog  解析到 sqlall.txt  文件中
mysqlbinlog /tmp/hoob/mysqld-bin.000286  > sqlall.txt

-- 提取 指定起始位置  和结束位置的  日志
mysqlbinlog --start-position="120" --stop-position="332" /tmp/hoob/mysqld-bin.000286  >120-332.txt


a、提取指定的binlog日志  
# mysqlbinlog /opt/data/APP01bin.000001  
# mysqlbinlog /opt/data/APP01bin.000001|grep insert  
/*!40019 SET @@session.max_insert_delayed_threads=0*/;  
insert into tb values(2,'jack')  
  
  
c、提取指定position位置的binlog日志并输出到压缩文件  
# mysqlbinlog --start-position="120" --stop-position="332" /opt/data/APP01bin.000001 |gzip >extra_01.sql.gz  
  
d、提取指定position位置的binlog日志导入数据库  
# mysqlbinlog --start-position="120" --stop-position="332" /opt/data/APP01bin.000001 | mysql -uroot -p  
  
e、提取指定开始时间的binlog并输出到日志文件  
# mysqlbinlog --start-datetime="2014-12-15 20:15:23" /opt/data/APP01bin.000002 --result-file=extra02.sql  
  
f、提取指定位置的多个binlog日志文件  
# mysqlbinlog --start-position="120" --stop-position="332" /opt/data/APP01bin.000001 /opt/data/APP01bin.000002|more  
  
g、提取指定数据库binlog并转换字符集到UTF8  
# mysqlbinlog --database=test --set-charset=utf8 /opt/data/APP01bin.000001 /opt/data/APP01bin.000002 >test.sql  
  
h、远程提取日志，指定结束时间   
# mysqlbinlog -urobin -p -h192.168.1.116 -P3306 --stop-datetime="2014-12-15 20:30:23" --read-from-remote-server mysql-bin.000033 |more  
  
i、远程提取使用row格式的binlog日志并输出到本地文件  
# mysqlbinlog -urobin -p -P3606 -h192.168.1.177 --read-from-remote-server -vv inst3606bin.000005 >row.sql 